local headers = {
  banners = {
    ["rowan_cap"] = {
      [[                                                    ]],
      [[     dMMMMb  dMMMMMP .aMMMb  dMP dMP dMP dMMMMMMMMb ]],
      [[    dMP dMP dMP     dMP"dMP dMP dMP amr dMP"dMP"dMP ]],
      [[   dMP dMP dMMMP   dMP dMP dMP dMP dMP dMP dMP dMP  ]],
      [[  dMP dMP dMP     dMP.aMP  YMvAP" dMP dMP dMP dMP   ]],
      [[ dMP dMP dMMMMMP  VMMMP"    VP"  dMP dMP dMP dMP    ]],
      [[                                                    ]],
    },
    ["graffiti"] = {
      [[                                             ]],
      [[  _______             ____   ___.__          ]],
      [[  \      \   ____  ___\   \ /   |__| _____   ]],
      [[  /   |   \_/ __ \/  _ \   Y   /|  |/     \  ]],
      [[ /    |    \  ___(  <_> \     / |  |  Y Y  \ ]],
      [[ \____|__  /\___  \____/ \___/  |__|__|_|  / ]],
      [[         \/     \/                       \/  ]],
      [[                                             ]],
    },
    ["ogre"] = {
      [[                                     ]],
      [[      __                _            ]],
      [[   /\ \ \___  ___/\   /(_)_ __ ___   ]],
      [[  /  \/ / _ \/ _ \ \ / | | '_ ` _ \  ]],
      [[ / /\  |  __| (_) \ V /| | | | | | | ]],
      [[ \_\ \/ \___|\___/ \_/ |_|_| |_| |_| ]],
      [[                                     ]],
    },
    ["ansi_shadow"] = {
      [[                                                    ]],
      [[ ███╗   ██╗███████╗ ██████╗ ██╗   ██╗██╗███╗   ███╗ ]],
      [[ ████╗  ██║██╔════╝██╔═══██╗██║   ██║██║████╗ ████║ ]],
      [[ ██╔██╗ ██║█████╗  ██║   ██║██║   ██║██║██╔████╔██║ ]],
      [[ ██║╚██╗██║██╔══╝  ██║   ██║╚██╗ ██╔╝██║██║╚██╔╝██║ ]],
      [[ ██║ ╚████║███████╗╚██████╔╝ ╚████╔╝ ██║██║ ╚═╝ ██║ ]],
      [[ ╚═╝  ╚═══╝╚══════╝ ╚═════╝   ╚═══╝  ╚═╝╚═╝     ╚═╝ ]],
      [[                                                    ]],
    },
    ["banner3"] = {
      [[                                                      ]],
      [[ ##    ## ########  #######  ##     ## #### ##     ## ]],
      [[ ###   ## ##       ##     ## ##     ##  ##  ###   ### ]],
      [[ ####  ## ##       ##     ## ##     ##  ##  #### #### ]],
      [[ ## ## ## ######   ##     ## ##     ##  ##  ## ### ## ]],
      [[ ##  #### ##       ##     ##  ##   ##   ##  ##     ## ]],
      [[ ##   ### ##       ##     ##   ## ##    ##  ##     ## ]],
      [[ ##    ## ########  #######     ###    #### ##     ## ]],
      [[                                                      ]],
    },
    ["colossal"] = {
      [[                                                            ]],
      [[ 888b    888                  888     888 d8b               ]],
      [[ 8888b   888                  888     888 Y8P               ]],
      [[ 88888b  888                  888     888                   ]],
      [[ 888Y88b 888  .d88b.   .d88b. Y88b   d88P 888 88888b.d88b.  ]],
      [[ 888 Y88b888 d8P  Y8b d88""88b Y88b d88P  888 888 "888 "88b ]],
      [[ 888  Y88888 88888888 888  888  Y88o88P   888 888  888  888 ]],
      [[ 888   Y8888 Y8b.     Y88..88P   Y888P    888 888  888  888 ]],
      [[ 888    Y888  "Y8888   "Y88P"     Y8P     888 888  888  888 ]],
      [[                                                            ]],
    },
    ["larry_3d"] = {
      [[                                                     ]],
      [[  __  __                 __  __                      ]],
      [[ /\ \/\ \               /\ \/\ \  __                 ]],
      [[ \ \ `\\ \     __    ___\ \ \ \ \/\_\    ___ ___     ]],
      [[  \ \ , ` \  /'__`\ / __`\ \ \ \ \/\ \ /' __` __`\   ]],
      [[   \ \ \`\ \/\  __//\ \L\ \ \ \_/ \ \ \/\ \/\ \/\ \  ]],
      [[    \ \_\ \_\ \____\ \____/\ `\___/\ \_\ \_\ \_\ \_\ ]],
      [[     \/_/\/_/\/____/\/___/  `\/__/  \/_/\/_/\/_/\/_/ ]],
      [[                                                     ]],
    },
    ["lean"] = {
      [[                                                                  ]],
      [[     _/      _/                      _/      _/  _/               ]],
      [[    _/_/    _/    _/_/      _/_/    _/      _/      _/_/_/  _/_/  ]],
      [[   _/  _/  _/  _/_/_/_/  _/    _/  _/      _/  _/  _/    _/    _/ ]],
      [[  _/    _/_/  _/        _/    _/    _/  _/    _/  _/    _/    _/  ]],
      [[ _/      _/    _/_/_/    _/_/        _/      _/  _/    _/    _/   ]],
      [[                                                                  ]],
    },
    ["sharp"] = {
      [[                                                                       ]],
      [[                                                                     ]],
      [[       ████ ██████           █████      ██                     ]],
      [[      ███████████             █████                             ]],
      [[      █████████ ███████████████████ ███   ███████████   ]],
      [[     █████████  ███    █████████████ █████ ██████████████   ]],
      [[    █████████ ██████████ █████████ █████ █████ ████ █████   ]],
      [[  ███████████ ███    ███ █████████ █████ █████ ████ █████  ]],
      [[ ██████  █████████████████████ ████ █████ █████ ████ ██████ ]],
      [[                                                                       ]],
    }
  },
}


return setmetatable(headers, {
  __index = function(tb, key)
    if key == "random" then
      -- Choose a random sub-table inside headers (imgs | banners)
      local ks = vim.tbl_keys(tb)
      local sub = tb[ks[math.random(#ks)]]

      -- Obtain keys and return a random banner
      local keys = vim.tbl_keys(sub)
      return sub[keys[math.random(1, #keys)]]
    else
      -- Return the desired banner
      return tb[key]
    end
  end
})
